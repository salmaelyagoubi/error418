[2024-05-18T02:15:33.735+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2024-05-18T02:15:33.781+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: data_ingestion_pipelines_2.validate_data scheduled__2024-05-17T00:00:00+00:00 [queued]>
[2024-05-18T02:15:33.799+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: data_ingestion_pipelines_2.validate_data scheduled__2024-05-17T00:00:00+00:00 [queued]>
[2024-05-18T02:15:33.802+0000] {taskinstance.py:2306} INFO - Starting attempt 11 of 11
[2024-05-18T02:15:33.820+0000] {taskinstance.py:2330} INFO - Executing <Task(PythonOperator): validate_data> on 2024-05-17 00:00:00+00:00
[2024-05-18T02:15:33.829+0000] {warnings.py:110} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:61: DeprecationWarning: This process (pid=2326) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-05-18T02:15:33.832+0000] {standard_task_runner.py:63} INFO - Started process 2342 to run task
[2024-05-18T02:15:33.831+0000] {standard_task_runner.py:90} INFO - Running: ['***', 'tasks', 'run', 'data_ingestion_pipelines_2', 'validate_data', 'scheduled__2024-05-17T00:00:00+00:00', '--job-id', '187', '--raw', '--subdir', 'DAGS_FOLDER/data-ingestion-dag.py', '--cfg-path', '/tmp/tmpu2x4bk4p']
[2024-05-18T02:15:33.833+0000] {standard_task_runner.py:91} INFO - Job 187: Subtask validate_data
[2024-05-18T02:15:33.908+0000] {task_command.py:426} INFO - Running <TaskInstance: data_ingestion_pipelines_2.validate_data scheduled__2024-05-17T00:00:00+00:00 [running]> on host 5ee845ef4e45
[2024-05-18T02:15:34.029+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='data_ingestion_pipelines_2' AIRFLOW_CTX_TASK_ID='validate_data' AIRFLOW_CTX_EXECUTION_DATE='2024-05-17T00:00:00+00:00' AIRFLOW_CTX_TRY_NUMBER='11' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2024-05-17T00:00:00+00:00'
[2024-05-18T02:15:34.030+0000] {taskinstance.py:430} INFO - ::endgroup::
[2024-05-18T02:15:34.058+0000] {logging_mixin.py:188} INFO - file_path in validate_data is  /opt/***/dags/raw-data/data_part_1.csv
[2024-05-18T02:15:34.059+0000] {logging_mixin.py:188} INFO - data_asset_name is  data_part_1
[2024-05-18T02:15:34.089+0000] {logging_mixin.py:188} INFO - Data types after reading CSV:
[2024-05-18T02:15:34.091+0000] {logging_mixin.py:188} INFO -  ph                 float64
Hardness           float64
Chloramines        float64
Sulfate            float64
Conductivity       float64
Organic_carbon     float64
Trihalomethanes    float64
Turbidity          float64
Potability           Int64
dtype: object
[2024-05-18T02:15:34.134+0000] {warnings.py:110} WARNING - /home/***/.local/lib/python3.12/site-packages/great_expectations/data_context/data_context/base_data_context.py:158: DeprecationWarning: DataContext and BaseDataContext are deprecated as of v0.17.10 and will be removed in v0.20. Please use gx.get_context instead.
  warnings.warn(

[2024-05-18T02:15:34.187+0000] {file_data_context.py:222} INFO - FileDataContext loading fluent config
[2024-05-18T02:15:34.212+0000] {config.py:187} INFO - Loading 'datasources' ->
[]
[2024-05-18T02:15:34.603+0000] {data_asset.py:541} INFO - 	29 expectation(s) included in expectation_suite.
[2024-05-18T02:15:34.692+0000] {logging_mixin.py:188} INFO - validation_results: {
  "success": false,
  "results": [
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_match_regex",
        "kwargs": {
          "column": "ph",
          "regex": "^\\d*\\.?\\d*$"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 77,
        "unexpected_percent": 7.7,
        "unexpected_percent_total": 7.7,
        "unexpected_percent_nonmissing": 7.7,
        "partial_unexpected_list": [
          -4.33944862831026,
          -6.313720849233269,
          -7.270968979006172,
          -8.235446939303975,
          -8.312380201697858,
          -9.216220501840835,
          -3.108625962670692,
          -1.772284900706886,
          -1.0973796730812655,
          -2.77363395288832,
          -0.1381140773692095,
          -1.6447781568952635,
          -5.965424287496488,
          -2.3229131444670905,
          -5.512629190433836,
          -4.200624415243251,
          -5.751304685719079,
          -4.904187178692842,
          -10.411156262527172,
          -6.550863408394411
        ]
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "kwargs": {
          "column": "ph"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_between",
        "kwargs": {
          "column": "ph",
          "min_value": -14.0,
          "max_value": 14.0
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 379,
        "unexpected_percent": 37.9,
        "unexpected_percent_total": 37.9,
        "unexpected_percent_nonmissing": 37.9,
        "partial_unexpected_list": [
          15.163099475991071,
          19.555288317493183,
          15.339540998299665,
          17.28620370653183,
          21.39312097333865,
          21.02265589343077,
          33.82619784995287,
          23.61631193984504,
          16.313854458911244,
          15.890308142857986,
          15.527024442121844,
          16.58457250363981,
          15.039176505544848,
          17.736816829223866,
          23.1647847465195,
          15.791480725443485,
          17.62649440541991,
          14.506903680781509,
          14.046017551819943,
          14.90789029376612
        ]
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_match_regex",
        "kwargs": {
          "column": "Hardness",
          "regex": "^\\d*\\.?\\d*$"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "unexpected_percent_nonmissing": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "kwargs": {
          "column": "Hardness"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_between",
        "kwargs": {
          "column": "Hardness",
          "min_value": 0.0,
          "max_value": 1000.0
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "unexpected_percent_nonmissing": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_match_regex",
        "kwargs": {
          "column": "Solids",
          "regex": "^\\d*\\.?\\d*$"
        },
        "meta": {}
      },
      "result": {},
      "meta": {},
      "exception_info": {
        "raised_exception": true,
        "exception_message": "KeyError: 'Solids'",
        "exception_traceback": "Traceback (most recent call last):\n  File \"/home/***/.local/lib/python3.12/site-packages/pandas/core/indexes/base.py\", line 3791, in get_loc\n    return self._engine.get_loc(casted_key)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"index.pyx\", line 152, in pandas._libs.index.IndexEngine.get_loc\n  File \"index.pyx\", line 181, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7080, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7088, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'Solids'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/***/.local/lib/python3.12/site-packages/great_expectations/data_asset/data_asset.py\", line 244, in wrapper\n    return_obj = func(self, **evaluation_args)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/***/.local/lib/python3.12/site-packages/great_expectations/dataset/pandas_dataset.py\", line 81, in inner_wrapper\n    series = data[column]\n             ~~~~^^^^^^^^\n  File \"/home/***/.local/lib/python3.12/site-packages/pandas/core/frame.py\", line 3893, in __getitem__\n    indexer = self.columns.get_loc(key)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/***/.local/lib/python3.12/site-packages/pandas/core/indexes/base.py\", line 3798, in get_loc\n    raise KeyError(key) from err\nKeyError: 'Solids'\n"
      }
    },
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "kwargs": {
          "column": "Solids"
        },
        "meta": {}
      },
      "result": {},
      "meta": {},
      "exception_info": {
        "raised_exception": true,
        "exception_message": "KeyError: 'Solids'",
        "exception_traceback": "Traceback (most recent call last):\n  File \"/home/***/.local/lib/python3.12/site-packages/pandas/core/indexes/base.py\", line 3791, in get_loc\n    return self._engine.get_loc(casted_key)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"index.pyx\", line 152, in pandas._libs.index.IndexEngine.get_loc\n  File \"index.pyx\", line 181, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7080, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7088, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'Solids'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/***/.local/lib/python3.12/site-packages/great_expectations/data_asset/data_asset.py\", line 244, in wrapper\n    return_obj = func(self, **evaluation_args)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/***/.local/lib/python3.12/site-packages/great_expectations/dataset/pandas_dataset.py\", line 81, in inner_wrapper\n    series = data[column]\n             ~~~~^^^^^^^^\n  File \"/home/***/.local/lib/python3.12/site-packages/pandas/core/frame.py\", line 3893, in __getitem__\n    indexer = self.columns.get_loc(key)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/***/.local/lib/python3.12/site-packages/pandas/core/indexes/base.py\", line 3798, in get_loc\n    raise KeyError(key) from err\nKeyError: 'Solids'\n"
      }
    },
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_between",
        "kwargs": {
          "column": "Solids",
          "min_value": 0.0,
          "max_value": 50000.0
        },
        "meta": {}
      },
      "result": {},
      "meta": {},
      "exception_info": {
        "raised_exception": true,
        "exception_message": "KeyError: 'Solids'",
        "exception_traceback": "Traceback (most recent call last):\n  File \"/home/***/.local/lib/python3.12/site-packages/pandas/core/indexes/base.py\", line 3791, in get_loc\n    return self._engine.get_loc(casted_key)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"index.pyx\", line 152, in pandas._libs.index.IndexEngine.get_loc\n  File \"index.pyx\", line 181, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7080, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7088, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'Solids'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/***/.local/lib/python3.12/site-packages/great_expectations/data_asset/data_asset.py\", line 244, in wrapper\n    return_obj = func(self, **evaluation_args)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/***/.local/lib/python3.12/site-packages/great_expectations/dataset/pandas_dataset.py\", line 81, in inner_wrapper\n    series = data[column]\n             ~~~~^^^^^^^^\n  File \"/home/***/.local/lib/python3.12/site-packages/pandas/core/frame.py\", line 3893, in __getitem__\n    indexer = self.columns.get_loc(key)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/***/.local/lib/python3.12/site-packages/pandas/core/indexes/base.py\", line 3798, in get_loc\n    raise KeyError(key) from err\nKeyError: 'Solids'\n"
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_match_regex",
        "kwargs": {
          "column": "Chloramines",
          "regex": "^\\d*\\.?\\d*$"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "unexpected_percent_nonmissing": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "kwargs": {
          "column": "Chloramines"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_between",
        "kwargs": {
          "column": "Chloramines",
          "min_value": 0.0,
          "max_value": 10.0
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 31,
        "unexpected_percent": 3.1,
        "unexpected_percent_total": 3.1,
        "unexpected_percent_nonmissing": 3.1,
        "partial_unexpected_list": [
          10.985681761980846,
          10.602212892891757,
          10.663770791832818,
          10.43138406813075,
          10.820036482845032,
          10.693875657099476,
          10.752675267215334,
          10.083129533874011,
          11.287151477877575,
          11.326886993767696,
          10.581138705155958,
          10.232271200170665,
          10.642858516473115,
          10.928739001599876,
          10.282775313823588,
          10.55868127261068,
          10.183576813081649,
          10.986912756722717,
          13.116766951453885,
          10.079536978893724
        ]
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_match_regex",
        "kwargs": {
          "column": "Sulfate",
          "regex": "^\\d*\\.?\\d*$"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 19,
        "unexpected_percent": 1.9,
        "unexpected_percent_total": 1.9,
        "unexpected_percent_nonmissing": 1.9,
        "partial_unexpected_list": [
          -4.444128790271691,
          -42.10582946442423,
          -47.69078696325823,
          -23.264321771492742,
          -9.969095965452766,
          -28.94968947535284,
          -67.83906745885992,
          -57.86714942049412,
          -90.19728444867268,
          -58.76951099730974,
          -176.67970215237375,
          -9.575366512709309,
          -31.446446632409906,
          -17.200921486421123,
          -22.90109285079745,
          -10.030411791157292,
          -3.820387859252037,
          -22.902120843078706,
          -99.8530768395442
        ]
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "kwargs": {
          "column": "Sulfate"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_between",
        "kwargs": {
          "column": "Sulfate",
          "min_value": 0.0,
          "max_value": 500.0
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 65,
        "unexpected_percent": 6.5,
        "unexpected_percent_total": 6.5,
        "unexpected_percent_nonmissing": 6.5,
        "partial_unexpected_list": [
          569.312613258709,
          -4.444128790271691,
          585.9589071881969,
          -42.10582946442423,
          541.071773726494,
          503.3319805253954,
          513.7403532157414,
          572.0895901006573,
          524.938829577826,
          511.1451092434932,
          -47.69078696325823,
          -23.264321771492742,
          669.9929699639292,
          514.4858615017466,
          509.3553430036781,
          -9.969095965452766,
          640.8479130574661,
          507.8297846917792,
          -28.94968947535284,
          524.6626636229892
        ]
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_match_regex",
        "kwargs": {
          "column": "Conductivity",
          "regex": "^\\d*\\.?\\d*$"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "unexpected_percent_nonmissing": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "kwargs": {
          "column": "Conductivity"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_between",
        "kwargs": {
          "column": "Conductivity",
          "min_value": 0.0,
          "max_value": 2000.0
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "unexpected_percent_nonmissing": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_match_regex",
        "kwargs": {
          "column": "Organic_carbon",
          "regex": "^\\d*\\.?\\d*$"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "unexpected_percent_nonmissing": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "kwargs": {
          "column": "Organic_carbon"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_between",
        "kwargs": {
          "column": "Organic_carbon",
          "min_value": 0.0,
          "max_value": 20.0
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 28,
        "unexpected_percent": 2.8000000000000003,
        "unexpected_percent_total": 2.8000000000000003,
        "unexpected_percent_nonmissing": 2.8000000000000003,
        "partial_unexpected_list": [
          21.1381881489939,
          20.764185316643687,
          27.684735626177385,
          20.189651924576854,
          20.224443850821903,
          21.096600463426984,
          20.304919946339453,
          21.02570575474835,
          20.37414609347208,
          20.34810234810669,
          23.83924251451865,
          20.42518242657228,
          20.325354249382464,
          23.16535195663884,
          20.552402362539954,
          21.66732188000882,
          22.382811881818405,
          20.67521832566059,
          20.5629777437628,
          20.495009415954804
        ]
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_match_regex",
        "kwargs": {
          "column": "Trihalomethanes",
          "regex": "^\\d*\\.?\\d*$"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 1,
        "unexpected_percent": 0.1,
        "unexpected_percent_total": 0.1,
        "unexpected_percent_nonmissing": 0.1,
        "partial_unexpected_list": [
          -1.115007306748666
        ]
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "kwargs": {
          "column": "Trihalomethanes"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_between",
        "kwargs": {
          "column": "Trihalomethanes",
          "min_value": 0.0,
          "max_value": 120.0
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 5,
        "unexpected_percent": 0.5,
        "unexpected_percent_total": 0.5,
        "unexpected_percent_nonmissing": 0.5,
        "partial_unexpected_list": [
          -1.115007306748666,
          120.03430196930287,
          122.85743483114602,
          123.9670773958709,
          128.1130385767658
        ]
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_match_regex",
        "kwargs": {
          "column": "Turbidity",
          "regex": "^\\d*\\.?\\d*$"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "unexpected_percent_nonmissing": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "kwargs": {
          "column": "Turbidity"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_between",
        "kwargs": {
          "column": "Turbidity",
          "min_value": 0.0,
          "max_value": 10.0
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "unexpected_percent_nonmissing": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "kwargs": {
          "column": "Potability"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_in_set",
        "kwargs": {
          "column": "Potability",
          "value_set": [
            0,
            1
          ]
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "unexpected_percent_nonmissing": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    }
  ],
  "evaluation_parameters": {},
  "statistics": {
    "evaluated_expectations": 29,
    "successful_expectations": 18,
    "unsuccessful_expectations": 11,
    "success_percent": 62.06896551724138
  },
  "meta": {
    "great_expectations_version": "0.18.13",
    "expectation_suite_name": "ex_dyali",
    "run_id": {
      "run_name": null,
      "run_time": "2024-05-18T02:15:34.602392+00:00"
    },
    "batch_kwargs": {
      "ge_batch_id": "826781e6-14bc-11ef-b077-0242ac120003"
    },
    "batch_markers": {},
    "batch_parameters": {},
    "validation_time": "20240518T021534.602139Z",
    "expectation_suite_meta": {
      "great_expectations_version": "0.18.12"
    }
  }
}
[2024-05-18T02:15:34.742+0000] {logging_mixin.py:188} INFO - /opt/***/dags/raw-data/data_part_1.csv is bad data
[2024-05-18T02:15:34.781+0000] {logging_mixin.py:188} INFO - Bad data saved at /opt/***/dags/bad-data/data_part_1.csv
[2024-05-18T02:15:34.782+0000] {python.py:237} INFO - Done. Returned value was: None
[2024-05-18T02:15:34.783+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2024-05-18T02:15:34.793+0000] {taskinstance.py:1206} INFO - Marking task as SUCCESS. dag_id=data_ingestion_pipelines_2, task_id=validate_data, run_id=scheduled__2024-05-17T00:00:00+00:00, execution_date=20240517T000000, start_date=20240518T021533, end_date=20240518T021534
[2024-05-18T02:15:34.850+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 0
[2024-05-18T02:15:34.883+0000] {taskinstance.py:3498} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-05-18T02:15:34.887+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
