[2024-05-18T01:25:59.596+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2024-05-18T01:25:59.655+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: data_ingestion_pipelines_2.validate_data scheduled__2024-05-17T00:00:00+00:00 [queued]>
[2024-05-18T01:25:59.673+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: data_ingestion_pipelines_2.validate_data scheduled__2024-05-17T00:00:00+00:00 [queued]>
[2024-05-18T01:25:59.676+0000] {taskinstance.py:2306} INFO - Starting attempt 6 of 6
[2024-05-18T01:25:59.697+0000] {taskinstance.py:2330} INFO - Executing <Task(PythonOperator): validate_data> on 2024-05-17 00:00:00+00:00
[2024-05-18T01:25:59.708+0000] {warnings.py:110} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:61: DeprecationWarning: This process (pid=1041) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-05-18T01:25:59.711+0000] {standard_task_runner.py:63} INFO - Started process 1059 to run task
[2024-05-18T01:25:59.712+0000] {standard_task_runner.py:90} INFO - Running: ['***', 'tasks', 'run', 'data_ingestion_pipelines_2', 'validate_data', 'scheduled__2024-05-17T00:00:00+00:00', '--job-id', '154', '--raw', '--subdir', 'DAGS_FOLDER/data-ingestion-dag.py', '--cfg-path', '/tmp/tmpcgie7eqa']
[2024-05-18T01:25:59.714+0000] {standard_task_runner.py:91} INFO - Job 154: Subtask validate_data
[2024-05-18T01:25:59.791+0000] {task_command.py:426} INFO - Running <TaskInstance: data_ingestion_pipelines_2.validate_data scheduled__2024-05-17T00:00:00+00:00 [running]> on host e512d0910ba5
[2024-05-18T01:25:59.934+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='data_ingestion_pipelines_2' AIRFLOW_CTX_TASK_ID='validate_data' AIRFLOW_CTX_EXECUTION_DATE='2024-05-17T00:00:00+00:00' AIRFLOW_CTX_TRY_NUMBER='6' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2024-05-17T00:00:00+00:00'
[2024-05-18T01:25:59.936+0000] {taskinstance.py:430} INFO - ::endgroup::
[2024-05-18T01:25:59.973+0000] {logging_mixin.py:188} INFO - file_path in validate_data is  /opt/***/dags/raw-data/data_part_7.csv
[2024-05-18T01:25:59.973+0000] {logging_mixin.py:188} INFO - data_asset_name is  data_part_7
[2024-05-18T01:26:00.033+0000] {logging_mixin.py:188} INFO - Data types after reading CSV:
[2024-05-18T01:26:00.035+0000] {logging_mixin.py:188} INFO -  ph                 float64
Hardness           float64
Chloramines        float64
Sulfate            float64
Conductivity       float64
Organic_carbon     float64
Trihalomethanes    float64
Turbidity          float64
Potability           Int64
dtype: object
[2024-05-18T01:26:00.089+0000] {warnings.py:110} WARNING - /home/***/.local/lib/python3.12/site-packages/great_expectations/data_context/data_context/base_data_context.py:158: DeprecationWarning: DataContext and BaseDataContext are deprecated as of v0.17.10 and will be removed in v0.20. Please use gx.get_context instead.
  warnings.warn(

[2024-05-18T01:26:00.175+0000] {file_data_context.py:222} INFO - FileDataContext loading fluent config
[2024-05-18T01:26:00.208+0000] {config.py:187} INFO - Loading 'datasources' ->
[]
[2024-05-18T01:26:00.630+0000] {data_asset.py:541} INFO - 	29 expectation(s) included in expectation_suite.
[2024-05-18T01:26:00.768+0000] {logging_mixin.py:188} INFO - validation_results: {
  "success": false,
  "results": [
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_match_regex",
        "kwargs": {
          "column": "ph",
          "regex": "^\\d*\\.?\\d*$"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 90,
        "unexpected_percent": 9.0,
        "unexpected_percent_total": 9.0,
        "unexpected_percent_nonmissing": 9.0,
        "partial_unexpected_list": [
          -0.0517973246650385,
          -5.085639734137116,
          -1.512621573252776,
          -2.799149637219303,
          -0.4240414619215986,
          -1.9504779407261363,
          -0.4372260265020884,
          -1.5706861856869023,
          -0.4692586707528061,
          -1.0756049053868288,
          -15.204475072652611,
          -2.533586740514613,
          -1.1613045658757812,
          -10.779399953518944,
          -1.7593675168369245,
          -6.037584313733857,
          -0.5121780289878295,
          -1.0060232211838862,
          -1.3905286564201234,
          -4.077323162145737
        ]
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "kwargs": {
          "column": "ph"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_between",
        "kwargs": {
          "column": "ph",
          "min_value": -14.0,
          "max_value": 14.0
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 358,
        "unexpected_percent": 35.8,
        "unexpected_percent_total": 35.8,
        "unexpected_percent_nonmissing": 35.8,
        "partial_unexpected_list": [
          20.26845324479516,
          16.88964911845092,
          27.91424215594176,
          20.57430045180319,
          26.496006682363884,
          29.069355250429027,
          17.921378488443533,
          16.600213062681295,
          17.567524385654714,
          20.238692096780746,
          26.13622158367656,
          27.57086076648668,
          20.881052119012004,
          18.454096767350112,
          19.714067068406465,
          29.57662003712923,
          18.04647319323964,
          17.214159585636548,
          15.46831572347062,
          15.021803238580018
        ]
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_match_regex",
        "kwargs": {
          "column": "Hardness",
          "regex": "^\\d*\\.?\\d*$"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "unexpected_percent_nonmissing": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "kwargs": {
          "column": "Hardness"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_between",
        "kwargs": {
          "column": "Hardness",
          "min_value": 0.0,
          "max_value": 1000.0
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "unexpected_percent_nonmissing": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_match_regex",
        "kwargs": {
          "column": "Solids",
          "regex": "^\\d*\\.?\\d*$"
        },
        "meta": {}
      },
      "result": {},
      "meta": {},
      "exception_info": {
        "raised_exception": true,
        "exception_message": "KeyError: 'Solids'",
        "exception_traceback": "Traceback (most recent call last):\n  File \"/home/***/.local/lib/python3.12/site-packages/pandas/core/indexes/base.py\", line 3791, in get_loc\n    return self._engine.get_loc(casted_key)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"index.pyx\", line 152, in pandas._libs.index.IndexEngine.get_loc\n  File \"index.pyx\", line 181, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7080, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7088, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'Solids'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/***/.local/lib/python3.12/site-packages/great_expectations/data_asset/data_asset.py\", line 244, in wrapper\n    return_obj = func(self, **evaluation_args)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/***/.local/lib/python3.12/site-packages/great_expectations/dataset/pandas_dataset.py\", line 81, in inner_wrapper\n    series = data[column]\n             ~~~~^^^^^^^^\n  File \"/home/***/.local/lib/python3.12/site-packages/pandas/core/frame.py\", line 3893, in __getitem__\n    indexer = self.columns.get_loc(key)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/***/.local/lib/python3.12/site-packages/pandas/core/indexes/base.py\", line 3798, in get_loc\n    raise KeyError(key) from err\nKeyError: 'Solids'\n"
      }
    },
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "kwargs": {
          "column": "Solids"
        },
        "meta": {}
      },
      "result": {},
      "meta": {},
      "exception_info": {
        "raised_exception": true,
        "exception_message": "KeyError: 'Solids'",
        "exception_traceback": "Traceback (most recent call last):\n  File \"/home/***/.local/lib/python3.12/site-packages/pandas/core/indexes/base.py\", line 3791, in get_loc\n    return self._engine.get_loc(casted_key)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"index.pyx\", line 152, in pandas._libs.index.IndexEngine.get_loc\n  File \"index.pyx\", line 181, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7080, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7088, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'Solids'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/***/.local/lib/python3.12/site-packages/great_expectations/data_asset/data_asset.py\", line 244, in wrapper\n    return_obj = func(self, **evaluation_args)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/***/.local/lib/python3.12/site-packages/great_expectations/dataset/pandas_dataset.py\", line 81, in inner_wrapper\n    series = data[column]\n             ~~~~^^^^^^^^\n  File \"/home/***/.local/lib/python3.12/site-packages/pandas/core/frame.py\", line 3893, in __getitem__\n    indexer = self.columns.get_loc(key)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/***/.local/lib/python3.12/site-packages/pandas/core/indexes/base.py\", line 3798, in get_loc\n    raise KeyError(key) from err\nKeyError: 'Solids'\n"
      }
    },
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_between",
        "kwargs": {
          "column": "Solids",
          "min_value": 0.0,
          "max_value": 50000.0
        },
        "meta": {}
      },
      "result": {},
      "meta": {},
      "exception_info": {
        "raised_exception": true,
        "exception_message": "KeyError: 'Solids'",
        "exception_traceback": "Traceback (most recent call last):\n  File \"/home/***/.local/lib/python3.12/site-packages/pandas/core/indexes/base.py\", line 3791, in get_loc\n    return self._engine.get_loc(casted_key)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"index.pyx\", line 152, in pandas._libs.index.IndexEngine.get_loc\n  File \"index.pyx\", line 181, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7080, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7088, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'Solids'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/***/.local/lib/python3.12/site-packages/great_expectations/data_asset/data_asset.py\", line 244, in wrapper\n    return_obj = func(self, **evaluation_args)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/***/.local/lib/python3.12/site-packages/great_expectations/dataset/pandas_dataset.py\", line 81, in inner_wrapper\n    series = data[column]\n             ~~~~^^^^^^^^\n  File \"/home/***/.local/lib/python3.12/site-packages/pandas/core/frame.py\", line 3893, in __getitem__\n    indexer = self.columns.get_loc(key)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/***/.local/lib/python3.12/site-packages/pandas/core/indexes/base.py\", line 3798, in get_loc\n    raise KeyError(key) from err\nKeyError: 'Solids'\n"
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_match_regex",
        "kwargs": {
          "column": "Chloramines",
          "regex": "^\\d*\\.?\\d*$"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "unexpected_percent_nonmissing": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "kwargs": {
          "column": "Chloramines"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_between",
        "kwargs": {
          "column": "Chloramines",
          "min_value": 0.0,
          "max_value": 10.0
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 42,
        "unexpected_percent": 4.2,
        "unexpected_percent_total": 4.2,
        "unexpected_percent_nonmissing": 4.2,
        "partial_unexpected_list": [
          10.761541959943411,
          10.598110963283212,
          10.152812889197063,
          10.207747000743794,
          11.464539702345316,
          11.100184507286183,
          10.76661837262406,
          10.405313154008622,
          10.03069407559292,
          10.090325789874624,
          10.195798329639862,
          11.061152949431222,
          13.314079949430129,
          11.754749483094365,
          10.316062538539068,
          11.343318698455256,
          10.390517140101316,
          10.89767764462096,
          10.383210988993024,
          10.327967751927448
        ]
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_match_regex",
        "kwargs": {
          "column": "Sulfate",
          "regex": "^\\d*\\.?\\d*$"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 31,
        "unexpected_percent": 3.1,
        "unexpected_percent_total": 3.1,
        "unexpected_percent_nonmissing": 3.1,
        "partial_unexpected_list": [
          -39.87909884800575,
          -64.41537442710296,
          -122.82176657068362,
          -15.334799682773166,
          -82.14273450561103,
          -70.11727715256848,
          -19.385128822457204,
          -3.3177241357180947,
          -8.08682847890833,
          -73.45714154376736,
          -14.32832209034018,
          -26.83284586191246,
          -1.2262454528789135,
          -89.19620355868693,
          -29.795946265580938,
          -36.58813701696056,
          -16.676741182679336,
          -1.306552583656412,
          -43.6955619463036,
          -16.366407410578688
        ]
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "kwargs": {
          "column": "Sulfate"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_between",
        "kwargs": {
          "column": "Sulfate",
          "min_value": 0.0,
          "max_value": 500.0
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 74,
        "unexpected_percent": 7.3999999999999995,
        "unexpected_percent_total": 7.3999999999999995,
        "unexpected_percent_nonmissing": 7.3999999999999995,
        "partial_unexpected_list": [
          -39.87909884800575,
          -64.41537442710296,
          -122.82176657068362,
          -15.334799682773166,
          -82.14273450561103,
          531.2344473509174,
          -70.11727715256848,
          -19.385128822457204,
          526.7510315097884,
          514.6919544162913,
          570.4343176304469,
          518.7554005748792,
          -3.3177241357180947,
          576.6843710627667,
          -8.08682847890833,
          -73.45714154376736,
          505.5446488659559,
          513.6079996394992,
          -14.32832209034018,
          522.3417052905975
        ]
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_match_regex",
        "kwargs": {
          "column": "Conductivity",
          "regex": "^\\d*\\.?\\d*$"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "unexpected_percent_nonmissing": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "kwargs": {
          "column": "Conductivity"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_between",
        "kwargs": {
          "column": "Conductivity",
          "min_value": 0.0,
          "max_value": 2000.0
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "unexpected_percent_nonmissing": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_match_regex",
        "kwargs": {
          "column": "Organic_carbon",
          "regex": "^\\d*\\.?\\d*$"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "unexpected_percent_nonmissing": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "kwargs": {
          "column": "Organic_carbon"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_between",
        "kwargs": {
          "column": "Organic_carbon",
          "min_value": 0.0,
          "max_value": 20.0
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 33,
        "unexpected_percent": 3.3000000000000003,
        "unexpected_percent_total": 3.3000000000000003,
        "unexpected_percent_nonmissing": 3.3000000000000003,
        "partial_unexpected_list": [
          21.51156423413216,
          22.080898983438725,
          20.837693969286622,
          22.22868873168152,
          21.01673906484148,
          20.909197644368696,
          20.89341890028154,
          23.75122948721456,
          20.94464241215709,
          20.949647028070792,
          20.804096579165886,
          20.805085052732977,
          20.148713655365384,
          21.756102810299826,
          21.36164047727205,
          20.35235204602922,
          21.250184485048084,
          20.8615835456021,
          20.60861123706844,
          22.03846596805919
        ]
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_match_regex",
        "kwargs": {
          "column": "Trihalomethanes",
          "regex": "^\\d*\\.?\\d*$"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "unexpected_percent_nonmissing": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "kwargs": {
          "column": "Trihalomethanes"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_between",
        "kwargs": {
          "column": "Trihalomethanes",
          "min_value": 0.0,
          "max_value": 120.0
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 1,
        "unexpected_percent": 0.1,
        "unexpected_percent_total": 0.1,
        "unexpected_percent_nonmissing": 0.1,
        "partial_unexpected_list": [
          120.95548821312984
        ]
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_match_regex",
        "kwargs": {
          "column": "Turbidity",
          "regex": "^\\d*\\.?\\d*$"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "unexpected_percent_nonmissing": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "kwargs": {
          "column": "Turbidity"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_between",
        "kwargs": {
          "column": "Turbidity",
          "min_value": 0.0,
          "max_value": 10.0
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "unexpected_percent_nonmissing": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "kwargs": {
          "column": "Potability"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_in_set",
        "kwargs": {
          "column": "Potability",
          "value_set": [
            0,
            1
          ]
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "unexpected_percent_nonmissing": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    }
  ],
  "evaluation_parameters": {},
  "statistics": {
    "evaluated_expectations": 29,
    "successful_expectations": 19,
    "unsuccessful_expectations": 10,
    "success_percent": 65.51724137931035
  },
  "meta": {
    "great_expectations_version": "0.18.13",
    "expectation_suite_name": "ex_dyali",
    "run_id": {
      "run_name": null,
      "run_time": "2024-05-18T01:26:00.627074+00:00"
    },
    "batch_kwargs": {
      "ge_batch_id": "95c6b43e-14b5-11ef-86ae-0242c0a88003"
    },
    "batch_markers": {},
    "batch_parameters": {},
    "validation_time": "20240518T012600.626725Z",
    "expectation_suite_meta": {
      "great_expectations_version": "0.18.12"
    }
  }
}
[2024-05-18T01:26:00.833+0000] {logging_mixin.py:188} INFO - /opt/***/dags/raw-data/data_part_7.csv is bad data
[2024-05-18T01:26:00.879+0000] {logging_mixin.py:188} INFO - Bad data saved at /opt/***/dags/bad-data/data_part_7.csv
[2024-05-18T01:26:00.880+0000] {python.py:237} INFO - Done. Returned value was: None
[2024-05-18T01:26:00.881+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2024-05-18T01:26:00.898+0000] {taskinstance.py:1206} INFO - Marking task as SUCCESS. dag_id=data_ingestion_pipelines_2, task_id=validate_data, run_id=scheduled__2024-05-17T00:00:00+00:00, execution_date=20240517T000000, start_date=20240518T012559, end_date=20240518T012600
[2024-05-18T01:26:00.970+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 0
[2024-05-18T01:26:01.021+0000] {taskinstance.py:3498} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-05-18T01:26:01.024+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
