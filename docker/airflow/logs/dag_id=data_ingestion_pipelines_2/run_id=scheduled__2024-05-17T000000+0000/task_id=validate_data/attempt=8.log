[2024-05-18T02:03:21.844+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2024-05-18T02:03:21.882+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: data_ingestion_pipelines_2.validate_data scheduled__2024-05-17T00:00:00+00:00 [queued]>
[2024-05-18T02:03:21.893+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: data_ingestion_pipelines_2.validate_data scheduled__2024-05-17T00:00:00+00:00 [queued]>
[2024-05-18T02:03:21.894+0000] {taskinstance.py:2306} INFO - Starting attempt 8 of 8
[2024-05-18T02:03:21.912+0000] {taskinstance.py:2330} INFO - Executing <Task(PythonOperator): validate_data> on 2024-05-17 00:00:00+00:00
[2024-05-18T02:03:21.921+0000] {warnings.py:110} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:61: DeprecationWarning: This process (pid=1298) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-05-18T02:03:21.923+0000] {standard_task_runner.py:63} INFO - Started process 1308 to run task
[2024-05-18T02:03:21.922+0000] {standard_task_runner.py:90} INFO - Running: ['***', 'tasks', 'run', 'data_ingestion_pipelines_2', 'validate_data', 'scheduled__2024-05-17T00:00:00+00:00', '--job-id', '166', '--raw', '--subdir', 'DAGS_FOLDER/data-ingestion-dag.py', '--cfg-path', '/tmp/tmpefubi6zt']
[2024-05-18T02:03:21.924+0000] {standard_task_runner.py:91} INFO - Job 166: Subtask validate_data
[2024-05-18T02:03:21.986+0000] {task_command.py:426} INFO - Running <TaskInstance: data_ingestion_pipelines_2.validate_data scheduled__2024-05-17T00:00:00+00:00 [running]> on host 5ee845ef4e45
[2024-05-18T02:03:22.090+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='data_ingestion_pipelines_2' AIRFLOW_CTX_TASK_ID='validate_data' AIRFLOW_CTX_EXECUTION_DATE='2024-05-17T00:00:00+00:00' AIRFLOW_CTX_TRY_NUMBER='8' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2024-05-17T00:00:00+00:00'
[2024-05-18T02:03:22.092+0000] {taskinstance.py:430} INFO - ::endgroup::
[2024-05-18T02:03:22.117+0000] {logging_mixin.py:188} INFO - file_path in validate_data is  /opt/***/dags/raw-data/data_part_4.csv
[2024-05-18T02:03:22.118+0000] {logging_mixin.py:188} INFO - data_asset_name is  data_part_4
[2024-05-18T02:03:22.146+0000] {logging_mixin.py:188} INFO - Data types after reading CSV:
[2024-05-18T02:03:22.148+0000] {logging_mixin.py:188} INFO -  ph                 float64
Hardness           float64
Chloramines        float64
Sulfate            float64
Conductivity       float64
Organic_carbon     float64
Trihalomethanes    float64
Turbidity          float64
Potability           Int64
dtype: object
[2024-05-18T02:03:22.193+0000] {warnings.py:110} WARNING - /home/***/.local/lib/python3.12/site-packages/great_expectations/data_context/data_context/base_data_context.py:158: DeprecationWarning: DataContext and BaseDataContext are deprecated as of v0.17.10 and will be removed in v0.20. Please use gx.get_context instead.
  warnings.warn(

[2024-05-18T02:03:22.254+0000] {file_data_context.py:222} INFO - FileDataContext loading fluent config
[2024-05-18T02:03:22.281+0000] {config.py:187} INFO - Loading 'datasources' ->
[]
[2024-05-18T02:03:22.649+0000] {data_asset.py:541} INFO - 	29 expectation(s) included in expectation_suite.
[2024-05-18T02:03:22.730+0000] {logging_mixin.py:188} INFO - validation_results: {
  "success": false,
  "results": [
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_match_regex",
        "kwargs": {
          "column": "ph",
          "regex": "^\\d*\\.?\\d*$"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 84,
        "unexpected_percent": 8.4,
        "unexpected_percent_total": 8.4,
        "unexpected_percent_nonmissing": 8.4,
        "partial_unexpected_list": [
          -8.224343109989194,
          -7.064009080683034,
          -0.8871766354087676,
          -2.6464299869125707,
          -0.3189766708385644,
          -1.510711858482214,
          -1.0511442850173367,
          -7.452213873111082,
          -1.3725419228455549,
          -2.859449195256172,
          -4.718944118087839,
          -2.053401062581754,
          -2.205732682557109,
          -9.09803192137574,
          -1.0335580792375154,
          -0.6489786106137512,
          -9.265359294911642,
          -10.605797582069526,
          -0.9840069168895448,
          -1.345080478210006
        ]
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "kwargs": {
          "column": "ph"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_between",
        "kwargs": {
          "column": "ph",
          "min_value": -14.0,
          "max_value": 14.0
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 371,
        "unexpected_percent": 37.1,
        "unexpected_percent_total": 37.1,
        "unexpected_percent_nonmissing": 37.1,
        "partial_unexpected_list": [
          18.405792487379525,
          14.47262620546241,
          17.96235203139239,
          22.174572320043552,
          21.221422632333613,
          14.702391905961983,
          17.309520990945813,
          21.745427678975,
          15.406188923746807,
          19.46481345816333,
          18.868166016210623,
          16.33182828891774,
          17.96984379098985,
          17.342612653150685,
          34.249216307222056,
          17.950119653742426,
          19.81952498376203,
          19.601408706996164,
          24.40047714220396,
          18.467406828696635
        ]
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_match_regex",
        "kwargs": {
          "column": "Hardness",
          "regex": "^\\d*\\.?\\d*$"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "unexpected_percent_nonmissing": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "kwargs": {
          "column": "Hardness"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_between",
        "kwargs": {
          "column": "Hardness",
          "min_value": 0.0,
          "max_value": 1000.0
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "unexpected_percent_nonmissing": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_match_regex",
        "kwargs": {
          "column": "Solids",
          "regex": "^\\d*\\.?\\d*$"
        },
        "meta": {}
      },
      "result": {},
      "meta": {},
      "exception_info": {
        "raised_exception": true,
        "exception_message": "KeyError: 'Solids'",
        "exception_traceback": "Traceback (most recent call last):\n  File \"/home/***/.local/lib/python3.12/site-packages/pandas/core/indexes/base.py\", line 3791, in get_loc\n    return self._engine.get_loc(casted_key)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"index.pyx\", line 152, in pandas._libs.index.IndexEngine.get_loc\n  File \"index.pyx\", line 181, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7080, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7088, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'Solids'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/***/.local/lib/python3.12/site-packages/great_expectations/data_asset/data_asset.py\", line 244, in wrapper\n    return_obj = func(self, **evaluation_args)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/***/.local/lib/python3.12/site-packages/great_expectations/dataset/pandas_dataset.py\", line 81, in inner_wrapper\n    series = data[column]\n             ~~~~^^^^^^^^\n  File \"/home/***/.local/lib/python3.12/site-packages/pandas/core/frame.py\", line 3893, in __getitem__\n    indexer = self.columns.get_loc(key)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/***/.local/lib/python3.12/site-packages/pandas/core/indexes/base.py\", line 3798, in get_loc\n    raise KeyError(key) from err\nKeyError: 'Solids'\n"
      }
    },
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "kwargs": {
          "column": "Solids"
        },
        "meta": {}
      },
      "result": {},
      "meta": {},
      "exception_info": {
        "raised_exception": true,
        "exception_message": "KeyError: 'Solids'",
        "exception_traceback": "Traceback (most recent call last):\n  File \"/home/***/.local/lib/python3.12/site-packages/pandas/core/indexes/base.py\", line 3791, in get_loc\n    return self._engine.get_loc(casted_key)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"index.pyx\", line 152, in pandas._libs.index.IndexEngine.get_loc\n  File \"index.pyx\", line 181, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7080, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7088, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'Solids'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/***/.local/lib/python3.12/site-packages/great_expectations/data_asset/data_asset.py\", line 244, in wrapper\n    return_obj = func(self, **evaluation_args)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/***/.local/lib/python3.12/site-packages/great_expectations/dataset/pandas_dataset.py\", line 81, in inner_wrapper\n    series = data[column]\n             ~~~~^^^^^^^^\n  File \"/home/***/.local/lib/python3.12/site-packages/pandas/core/frame.py\", line 3893, in __getitem__\n    indexer = self.columns.get_loc(key)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/***/.local/lib/python3.12/site-packages/pandas/core/indexes/base.py\", line 3798, in get_loc\n    raise KeyError(key) from err\nKeyError: 'Solids'\n"
      }
    },
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_between",
        "kwargs": {
          "column": "Solids",
          "min_value": 0.0,
          "max_value": 50000.0
        },
        "meta": {}
      },
      "result": {},
      "meta": {},
      "exception_info": {
        "raised_exception": true,
        "exception_message": "KeyError: 'Solids'",
        "exception_traceback": "Traceback (most recent call last):\n  File \"/home/***/.local/lib/python3.12/site-packages/pandas/core/indexes/base.py\", line 3791, in get_loc\n    return self._engine.get_loc(casted_key)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"index.pyx\", line 152, in pandas._libs.index.IndexEngine.get_loc\n  File \"index.pyx\", line 181, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7080, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7088, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'Solids'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/***/.local/lib/python3.12/site-packages/great_expectations/data_asset/data_asset.py\", line 244, in wrapper\n    return_obj = func(self, **evaluation_args)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/***/.local/lib/python3.12/site-packages/great_expectations/dataset/pandas_dataset.py\", line 81, in inner_wrapper\n    series = data[column]\n             ~~~~^^^^^^^^\n  File \"/home/***/.local/lib/python3.12/site-packages/pandas/core/frame.py\", line 3893, in __getitem__\n    indexer = self.columns.get_loc(key)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/***/.local/lib/python3.12/site-packages/pandas/core/indexes/base.py\", line 3798, in get_loc\n    raise KeyError(key) from err\nKeyError: 'Solids'\n"
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_match_regex",
        "kwargs": {
          "column": "Chloramines",
          "regex": "^\\d*\\.?\\d*$"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "unexpected_percent_nonmissing": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "kwargs": {
          "column": "Chloramines"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_between",
        "kwargs": {
          "column": "Chloramines",
          "min_value": 0.0,
          "max_value": 10.0
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 33,
        "unexpected_percent": 3.3000000000000003,
        "unexpected_percent_total": 3.3000000000000003,
        "unexpected_percent_nonmissing": 3.3000000000000003,
        "partial_unexpected_list": [
          11.46792812146174,
          10.233778420262032,
          10.55715067952565,
          11.91869931702874,
          10.27990845477555,
          10.608348405152425,
          10.331229852347423,
          10.795514235966452,
          10.919843481141967,
          10.223746221111508,
          10.560306151670936,
          10.397048295534418,
          11.560342007359123,
          11.345138990826158,
          10.062360537511417,
          10.290383566906474,
          10.087517351715466,
          10.862396340115046,
          11.380613869562758,
          10.30304530861288
        ]
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_match_regex",
        "kwargs": {
          "column": "Sulfate",
          "regex": "^\\d*\\.?\\d*$"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 31,
        "unexpected_percent": 3.1,
        "unexpected_percent_total": 3.1,
        "unexpected_percent_nonmissing": 3.1,
        "partial_unexpected_list": [
          -94.28582351510784,
          -31.354933505924294,
          -65.70134211156432,
          -69.4827321416845,
          -67.97544061152763,
          -100.09464779938048,
          -204.6851594541528,
          -33.79309007105019,
          -37.89884863491892,
          -69.20558225858565,
          -38.10587517592569,
          -175.55610876033512,
          -144.47415210865938,
          -73.01000671495467,
          -21.06671721499396,
          -48.348849208383,
          -2.2034925829455005,
          -43.62762918055404,
          -5.880622219634745,
          -25.868484637900792
        ]
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "kwargs": {
          "column": "Sulfate"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_between",
        "kwargs": {
          "column": "Sulfate",
          "min_value": 0.0,
          "max_value": 500.0
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 73,
        "unexpected_percent": 7.3,
        "unexpected_percent_total": 7.3,
        "unexpected_percent_nonmissing": 7.3,
        "partial_unexpected_list": [
          -94.28582351510784,
          516.6903560861606,
          -31.354933505924294,
          -65.70134211156432,
          568.9614967552016,
          510.86834241379165,
          -69.4827321416845,
          608.568332110236,
          561.2750574499162,
          -67.97544061152763,
          -100.09464779938048,
          575.6197608806563,
          -204.6851594541528,
          500.8033736750052,
          604.0451961158218,
          -33.79309007105019,
          -37.89884863491892,
          534.0739990347092,
          -69.20558225858565,
          506.1325836350306
        ]
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_match_regex",
        "kwargs": {
          "column": "Conductivity",
          "regex": "^\\d*\\.?\\d*$"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "unexpected_percent_nonmissing": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "kwargs": {
          "column": "Conductivity"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_between",
        "kwargs": {
          "column": "Conductivity",
          "min_value": 0.0,
          "max_value": 2000.0
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "unexpected_percent_nonmissing": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_match_regex",
        "kwargs": {
          "column": "Organic_carbon",
          "regex": "^\\d*\\.?\\d*$"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "unexpected_percent_nonmissing": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "kwargs": {
          "column": "Organic_carbon"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_between",
        "kwargs": {
          "column": "Organic_carbon",
          "min_value": 0.0,
          "max_value": 20.0
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 28,
        "unexpected_percent": 2.8000000000000003,
        "unexpected_percent_total": 2.8000000000000003,
        "unexpected_percent_nonmissing": 2.8000000000000003,
        "partial_unexpected_list": [
          20.690238537422665,
          20.83904615279179,
          20.845388802275306,
          22.443593921953187,
          21.282317935340032,
          20.023904890515585,
          20.884381120445685,
          20.00777320269087,
          20.619688690665008,
          23.591101458559223,
          20.80013759109497,
          20.65462089242785,
          21.506610826173365,
          21.01535011546614,
          22.05426038171594,
          22.51739696560897,
          21.231120769846715,
          20.897462050126244,
          21.83244246618348,
          20.24333676871352
        ]
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_match_regex",
        "kwargs": {
          "column": "Trihalomethanes",
          "regex": "^\\d*\\.?\\d*$"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "unexpected_percent_nonmissing": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "kwargs": {
          "column": "Trihalomethanes"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_between",
        "kwargs": {
          "column": "Trihalomethanes",
          "min_value": 0.0,
          "max_value": 120.0
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 4,
        "unexpected_percent": 0.4,
        "unexpected_percent_total": 0.4,
        "unexpected_percent_nonmissing": 0.4,
        "partial_unexpected_list": [
          123.15780906005568,
          126.10764523082833,
          143.3683265070148,
          128.5980269009669
        ]
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_match_regex",
        "kwargs": {
          "column": "Turbidity",
          "regex": "^\\d*\\.?\\d*$"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "unexpected_percent_nonmissing": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "kwargs": {
          "column": "Turbidity"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_between",
        "kwargs": {
          "column": "Turbidity",
          "min_value": 0.0,
          "max_value": 10.0
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "unexpected_percent_nonmissing": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "kwargs": {
          "column": "Potability"
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_in_set",
        "kwargs": {
          "column": "Potability",
          "value_set": [
            0,
            1
          ]
        },
        "meta": {}
      },
      "result": {
        "element_count": 1000,
        "missing_count": 0,
        "missing_percent": 0.0,
        "unexpected_count": 0,
        "unexpected_percent": 0.0,
        "unexpected_percent_total": 0.0,
        "unexpected_percent_nonmissing": 0.0,
        "partial_unexpected_list": []
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      }
    }
  ],
  "evaluation_parameters": {},
  "statistics": {
    "evaluated_expectations": 29,
    "successful_expectations": 19,
    "unsuccessful_expectations": 10,
    "success_percent": 65.51724137931035
  },
  "meta": {
    "great_expectations_version": "0.18.13",
    "expectation_suite_name": "ex_dyali",
    "run_id": {
      "run_name": null,
      "run_time": "2024-05-18T02:03:22.648145+00:00"
    },
    "batch_kwargs": {
      "ge_batch_id": "ce203166-14ba-11ef-abb7-0242ac120003"
    },
    "batch_markers": {},
    "batch_parameters": {},
    "validation_time": "20240518T020322.647948Z",
    "expectation_suite_meta": {
      "great_expectations_version": "0.18.12"
    }
  }
}
[2024-05-18T02:03:22.778+0000] {logging_mixin.py:188} INFO - /opt/***/dags/raw-data/data_part_4.csv is bad data
[2024-05-18T02:03:22.816+0000] {logging_mixin.py:188} INFO - Bad data saved at /opt/***/dags/bad-data/data_part_4.csv
[2024-05-18T02:03:22.817+0000] {python.py:237} INFO - Done. Returned value was: None
[2024-05-18T02:03:22.818+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2024-05-18T02:03:22.829+0000] {taskinstance.py:1206} INFO - Marking task as SUCCESS. dag_id=data_ingestion_pipelines_2, task_id=validate_data, run_id=scheduled__2024-05-17T00:00:00+00:00, execution_date=20240517T000000, start_date=20240518T020321, end_date=20240518T020322
[2024-05-18T02:03:22.862+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 0
[2024-05-18T02:03:22.894+0000] {taskinstance.py:3498} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-05-18T02:03:22.896+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
